openapi: 3.0.0
info:
  title: Products API
  version: 1.0.0
  description: An API to manage products with JWT-based authorization

servers:
  - url: http://localhost:8080

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        betamount:
          type: number
        status:
          type: string
          enum: [win, lose]
        multiplayer:
          type: number
      required: [id, betamount, status, multiplayer]

security:
  - bearerAuth: []

paths:
  /token:
    post:
      summary: Generate a JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                role:
                  type: string
                permissions:
                  type: array
                  items:
                    type: string
              required: [id, role, permissions]
      responses:
        '200':
          description: Token generated
        '400':
          description: Invalid request

  /verify:
    get:
      summary: Verify JWT token
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Valid token
        '400':
          description: No token
        '401':
          description: Invalid or expired token

  /products:
    get:
      summary: Get a paginated list of products
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: A list of products
    post:
      summary: Create a new product
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created
        '400':
          description: Invalid format
        '403':
          description: Forbidden

  /products/{id}:
    get:
      summary: Get a product by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product details
        '404':
          description: Not found

    put:
      summary: Update a product
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                betamount:
                  type: number
                status:
                  type: string
                  enum: [win, lose]
                multiplayer:
                  type: number
      responses:
        '200':
          description: Product updated
        '400':
          description: Invalid input
        '404':
          description: Not found

    delete:
      summary: Delete a product
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product deleted
        '403':
          description: Only ADMIN can delete
        '404':
          description: Product not found
